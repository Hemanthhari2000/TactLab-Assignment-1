Flask introduction
--------------------

( LEARNING SOURCE [OFFICIAL DOCUMENTATION]: https://youtu.be/mqhxxeeTbu0?list=PLzMcBGfZo4-n4vJJybUVV3Un_NFS5EOgX )
  DATE: 31/10/2020

* What is Flask ? *

-- Flask is a micro web framework for building websites with python.
-- As Flask is a micro web framework it doesnt come with a lot of functionalities like databases, user authentications and so.
-- Flask is also quick and easy to start.


* Installing Flask *

` pip install flask `

-- using dynamic paths with flask.
-- redirecting users from one page to another page.


( LEARNING SOURCE [OFFICIAL DOCUMENTATION]: https://youtu.be/xIgPMguqyws )
  DATE: 05/11/2020

-- using templates in flask.
-- main use of templates is to reduce the stress of writing inline HTML in the code.
-- we can make a template and then direct the flask application to the template and hence it will then render the page respectively.
-- we can create an directory called templates in the main directory.
-- finally, in the templates we can then add html files and write some html code in it.
-- then we can use "render_template()" in flask to render the html page.

* Dynamic Passing of Data between templates. *

-- we can now use the data passing where we can pass the data between templates and flask application.
-- we can use the "{{ VARIABLE }}" to pass the value from the flask python application to the html template.
-- In Templates we can also use the TEMPLATING LANGUAGE where we can write python code in html file using "{% STATEMENT %}".
-- 	we can also pass list or any other similar datatypes to the template and then render it out.


( LEARNING SOURCE [OFFICIAL DOCUMENTATION]: https://youtu.be/4nzI4RKwb5I )
  DATE: 05/11/2020

  * Using Bootstrap *

  -- we can add the bootstrap to the html files via CDN (Content Delivery Network).
  -- we link it to the html file.
  -- now we can use the predefined classes or bootstrap elements.
  -- We can use bootstrap also to quickly design our web design.
  -- we need to link it with the html file that we need.
  -- usually, bootstrap is used in every page when a developer works on in so. it is recommended that we link the  bootstrap at a main html page with where it can be accisible to all other templates too.
  -- using templates and adding bootstrap can be very quickly done and it consumes less time. comparatively.
  
  * Using Template Inheritance *

  -- We also have the Inheritance concept.
  -- we can inherit a template from another template and the use that specific template accross our project.
  -- it is required to add {% block content%} {% endblock %}, {% extends "html" %}
  -- the "block contents" are used as a placeholder for some other template to run.
  -- It is common in live websites that a single NAVBAR is used in multiple pages without any changes.
  -- Hence we can make a template on the navbar and then "extend" it to other templates across the project.
  -- This is called template inheritance.