FastAPI introduction
--------------------

( LEARNING SOURCE [OFFICIAL DOCUMENTATION]: https://fastapi.tiangolo.com/ )
  DATE: 29/10/2020

* What is FastAPI ? *

-- FastAPI is a python framework that is used to but api's.
-- It is fast to code has high performance and also it is ready for production. 
-- It supports asynchronous fucntionality and the framework is it self asynchronous.
-- It uses python type hints which is the reason for the framework to be fast and requires less code.

* Features of FastAPI ? *

-- Fast
-- Easy to code
-- Lower or few bugs
-- easy to learn and use
-- robust

* Installation of fastAPI and ASGI server *

( LEARNING SOURCE [YOUTUBE VIDEO] : https://youtu.be/kCggyi_7pHg )

-- Open command prompt and type 
   pip install fastapi

-- Install ASGI server (uvicorn)
   pip install uvicorn

   (or)

-- Install Hypercorn 
   pip install hypercorn

* Running FastAPI *

-- Create a virtual environment (optional).
-- Install fastapi and ASGI server ( either uvicorn or hypercorn ).
-- Create a python file main.py.
-- import fastapi and run a get request.
-- now open terminal and start the server using 
   		uvicorn main:app --reload ( or ) hypercorn main:app --reload
-- try different routes and see the data being delivered and retrived.
-- we can pass the variable data to the routes as well.

* Using Models *

-- learned how to use pydantic BaseModel for post requests.


* Using Interactive API docs by Swaggers UI *

-- I learned by going to the http://localhost:8000/docs we can use the GUI testing tool by Swaggers UI. 


( LEARNING SOURCE [YOUTUBE VIDEO] : https://youtu.be/6wEqbyNs?list=PLShTCj6cbon9gK9AbDSxZbas1F6b6C_Mx )
  DATE: 30/10/2020
-- Using "async" functions in python.
-- Sending data as a JSON using the async function.

( LEARNING SOURCE [YOUTUBE VIDEO] : https://youtu.be/uldt_GTvZFI?list=PLShTCj6cbon9gK9AbDSxZbas1F6b6C_Mx )
  DATE: 30/10/2020

-- using python typing or type hints.
-- we can use either doc (swagger UI) or redoc but the main difference is that the swaggers UI is both read and execute type where are the redoc is Read-only so we CAN'T execute or test it.
-- passing arguments in the url and then showing it as a JSON.
-- while passing the arguments we can use python type hints to specify the data type of the argument.
-- we can use query parameter as well and get the data.

( LEARNING SOURCE [YOUTUBE VIDEO] :  )
  DATE: 31/10/2020

-- using pydantic BaseModel.
-- we can send the BaseModel values in JSON to the server.
-- sending multiple path and query parameter with the pydantic BaseModel.